/*The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).

For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) = 16.
Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.

Return the maximum such product difference.*/

class Solution {
    public int maxProductDifference(int[] nums) {
      
        int max = Integer.MIN_VALUE;
        int smax = Integer.MIN_VALUE;
        int min1 = Integer.MAX_VALUE;
        int min2 = Integer.MAX_VALUE;

        for (int i = 0; i < nums.length; i++) {
           
            if (nums[i] > max) {
                smax = max;
                max = nums[i];
            } else if (nums[i] > smax) {
                smax = nums[i];
            }

          
            if (nums[i] < min1) {
                min2 = min1;
                min1 = nums[i];
            } else if (nums[i] < min2) {
                min2 = nums[i];
            }
        }

        int result = (max * smax) - (min1 * min2);
        return result;
    }
}


/* Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.
*/
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] newNums = new int[nums.length];
        int prefixProduct = 1;
        for(int i = 0; i < nums.length; i++) {
            newNums[i] = prefixProduct;
            prefixProduct *= nums[i];
        }
        int suffixProduct = 1;
        for(int i = nums.length-1; i >= 0; i--) {
            newNums[i] *= suffixProduct;
            suffixProduct *= nums[i];
        }
        return newNums;
    }
}
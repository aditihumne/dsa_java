/* Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.
*/
class Solution {
    public int[] productExceptSelf(int[] nums) {
       int n = nums.length;
    int[] right = new int[n];
    int p = 1;

    // Compute the products of elements to the right
    for (int i = n - 1; i >= 0; i--) {
        p = p * nums[i];
        right[i] = p;
    }

    int[] ans = new int[n];
    int left = 1;
       
        for(int i =0 ; i<n-1 ; i++){
            int val = left * right[i+1];
            ans[i]=val;
            left = left * nums[i]; // it give the index of an array
        }
        ans[n-1] = left;
        return ans;
        
    }
}

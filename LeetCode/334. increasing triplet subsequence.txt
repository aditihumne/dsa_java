/*
Given an integer array nums, return true if there exists a triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k]. If no such indices exists, return false.
*/
/*
// it can be solved with o(n^3) time complexity 
for(int i= 0; i<nums.length ; i++){
for(int j= i+1; i<nums.length ; j++){
for(int k= j+1; i<nums.length ; k++){
if(nums[i]<nums[j] && nums[j]<nums[k]){
return true;
}else{
return false;}
}}}
*/
class Solution {
    public boolean increasingTriplet(int[] nums) {
       int first = Integer.MAX_VALUE ;         //set as +infinity 
       int second = Integer.MAX_VALUE;         // set as + infinity
       int third = Integer.MAX_VALUE;         // set as +infinity
       for (int i=0 ;i<nums.length ; i++){
        int ele = nums[i];

        if(first >=ele){
            first = ele ;
        }else if(second >= ele){
            second = ele;

        } else{
            third = ele;
            return true;
        }
       }
       return false;
    }
}
